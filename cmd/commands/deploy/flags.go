package deploy

import (
	"fmt"

	"github.com/spf13/cobra"
)

// Flags represents deploy command flags
// These flags are a simplified version used for the new command structure.
type Flags struct {
	StackName       string
	Template        string
	Parameters      string
	Tags            string
	Bucket          string
	ChangesetName   string
	Dryrun          bool
	NonInteractive  bool
	CreateChangeset bool
	DeployChangeset bool
	DefaultTags     bool
	DeploymentFile  string
}

// Validate validates the deploy flags and returns an error if required
// parameters are missing or conflicting.
func (f *Flags) Validate() error {
	if f.StackName == "" {
		return fmt.Errorf("stack name is required")
	}
	if f.DeploymentFile != "" && (f.Template != "" || f.Parameters != "" || f.Tags != "") {
		return fmt.Errorf("you can't provide a deployment file and other parameters at the same time")
	}
	return nil
}

// RegisterFlags registers the deploy flags on the provided Cobra command.
func (f *Flags) RegisterFlags(cmd *cobra.Command) {
	cmd.Flags().StringVarP(&f.StackName, "stackname", "n", "", "The name for the stack")
	cmd.Flags().StringVarP(&f.Template, "template", "f", "", "The filename for the template")
	cmd.Flags().StringVarP(&f.Parameters, "parameters", "p", "", "The file(s) containing the parameter values, comma-separated for multiple")
	cmd.Flags().StringVarP(&f.Tags, "tags", "t", "", "The file(s) containing the tags, comma-separated for multiple")
	cmd.Flags().StringVarP(&f.Bucket, "bucket", "b", "", "The S3 bucket where the template should be uploaded to (optional)")
	cmd.Flags().StringVarP(&f.ChangesetName, "changeset", "c", "", "The name of the changeset, when not provided it will be autogenerated")
	cmd.Flags().BoolVar(&f.Dryrun, "dry-run", false, "Do a dry run: create the changeset and immediately delete")
	cmd.Flags().BoolVar(&f.NonInteractive, "non-interactive", false, "Run in non-interactive mode: automatically approve the changeset and deploy")
	cmd.Flags().BoolVar(&f.CreateChangeset, "create-changeset", false, "Only create a change set")
	cmd.Flags().BoolVar(&f.DeployChangeset, "deploy-changeset", false, "Deploy a specific change set")
	cmd.Flags().BoolVar(&f.DefaultTags, "default-tags", true, "Add any default tags that are specified in your config file")
	cmd.Flags().StringVarP(&f.DeploymentFile, "deployment-file", "d", "", "The file to use for the deployment")
}
